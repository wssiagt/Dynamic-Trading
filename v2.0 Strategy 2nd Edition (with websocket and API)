-----第二版本加入了何处需要添加websocket，以及API语句使用！！！


1.初始化交易：选择交易种类exchange.SetContractType(’quarter’)，设置杠杆倍数exchange.SetMarginLevel(’20’)，获取初始持仓数量exchange.GetPosition()    initamount
2.重复获取持仓信息
--------A. 当profitrate<-0.05时，(此处使用exchange.GetPosition())
		A.a. 获取最新(exchange.GetDepth())  depth，取“卖一价”作为交易价，计算 交易数量=初始持仓数量*0.1，以（卖一价，交易数量）执行平仓操作
    
		A.b. 执行操作后开始判断是否成交，这一次使用获取订单信息的方式(exchange.GetOrders())，检索orders中是否存在price = '卖一价' 的订单，
		且该oder.offset = 1，
		如果存在符合条件的订单，则视当前为“交易未成交”，同时使用exchange.GetOrders().id获取该订单id.
    
		A.c. 在上述情况下需要继续获取持仓信息的profitrate(exchange.GetPosition().Profitrate，且当最新profitrate与前profitrate差
		小于-0.02时，使用CancleOrder（id）撤销'A.b'阶段获取的订单，之后再次获取最新depth，取最新卖一价作为交易价，计算交易数量与前一次相等，
		按（最新卖一价，交易数量）执行平仓操作.
    
		A.d. 执行A.c.操作后使用A.b.部分方式判断交易是否成交，条件参数使用A.c.部分获取的“最新卖一价”，且当始终为成交则循环以上操作.
    
	   否则继续循环判断profitrate是否<-0.05
		
	    |------B. 当进入A循环中执行操作，判断结果为“交易成功”，计算“开仓价格”=“最新平仓成交交价”*（1+0.035）/20，设置“交易数量”= 平仓数量，
      	           以（“开仓价格”，“交易数量”）开仓。 （exchange.SetDirection(),exchange.Buy/CloseBuy或者exchange.Sell/CloseSell）
			B.a. 判断是否成交，通过与b.相同的方式判断，条件参数使用price是否等于“开仓价格”，且offset = 0，同时获取此订单id，如果判断为
			未成交，则重复该判断，直到不存在符合条件订单，视为成交。
	
---------C. 在B部分未成交的同时，重复获取持仓信息中profitrate和holdprice，当存在B.属于amount!=initamount，且最新profitrate>-0.03时，
	    以（holdprice，“交易数量”）开仓(exchange.Buy/Sell)，且使用CancleOrder（id）撤销B部分未成交的订单。
	    
	    
3.累计计数第2部分,C部分执行次数

4.当profitrate>0.35时，获取最新depth，取此时最新“卖一价”,交易数量=initamount*0.15，以（“卖一价”，交易数量）平仓获利。
            第4部分是贯穿整个主函数的条件，需要循环判断，属于最高优先级！
	    
	    
	    exchange.GetPosition(), exchange.GetDepth()语句需要使用websocket协议，否则执行速度过慢！！！
	    

12-29
v2.0

1. 运行volum，initial，获取当前amount，并将volum部分获取的amount作为不变值，initial设置合约、杠杆、获取profitrate等基础设置.

2. 当profitrate<-0.05时，执行depth获取iniask，inibid，并通过计算得出buyprice、sellprice和tradeamount.

3. 执行closesell，输入buyprice，tradeamount作为参数.

4. closesell执行完毕后，循环运行getorders获取closesell的订单，且保留该订单ID，并同时循环获取当前initial.profitrate，
	当：getorders有返回值符合Offset=0，且Price=closesell步骤中buyprice，且同时profitrate<-0.05，三个条件都成立时继续循环；
	当：getorders有返回值符合Offset=0，且Price=buyprice的订单，但当前profitrate-（-0.05）<-0.02时，使用Cancel（ID）取消订单，
返回执行第二步；
	当：getorders无返回值符合offset=0，且Price=buyprice的订单，且profitrate>-0.05时，使用Cancel（ID）取消订单，执行depth，获取iniask，
执行selltrade(iniask, tradeamount)；
	当：getorders无返回值符合Offset=0，且Price=buyprice的订单，且profitrate<-0.05时，进入下一步。

注：描述中“返回执行第二步”，也可以通过执行: depth→closesell(buyprice, tradeaomount)来实现。
